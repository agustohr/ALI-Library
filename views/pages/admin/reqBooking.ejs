<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('partials_admin/head'); %>
    <title>ALI Library - Borrow</title>
</head>

<body id="page-top">

    <!-- Page Wrapper -->
    <div id="wrapper">

        <%- include('partials_admin/sidebar'); %>

        <!-- Content Wrapper -->
        <div id="content-wrapper" class="d-flex flex-column">

            <!-- Main Content -->
            <div id="content">

              <%- include('partials_admin/topbar'); %>

                <!-- Begin Page Content -->
                <div class="container-fluid">

                    <!-- Page Heading -->
                    <h1 class="h3 mb-2 text-gray-800">Request Booking</h1>
                    <p class="mb-4">Silakan untuk melakukan approve atau reject pada permintaan booking yang tersedia</p>

                    <!-- DataTales Example -->
                    <div class="card shadow mb-4">
                        <div class="card-header py-3">
                            <h6 class="m-0 font-weight-bold text-primary">Data Request Booking</h6>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-striped" id="dataTable" width="100%" cellspacing="0">
                                    <thead>
                                        <tr>
                                            <th>ID Borrow</th>
                                            <th>ID Pegawai</th>
                                            <th>Nama</th>
                                            <th>ID Item</th>
                                            <th>Title</th>
                                            <th>Code</th>
                                            <th>Request Date</th>
                                            <!-- <th>Approve Admin</th>
                                            <th>Approve Date</th>
                                            <th>Reject Admin</th>
                                            <th>Reject Date</th> -->
                                            <th>Borrow Status</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tfoot>
                                        <tr>
                                          <th>ID Borrow</th>
                                            <th>ID Pegawai</th>
                                            <th>Nama</th>
                                            <th>ID Item</th>
                                            <th>Title</th>
                                            <th>Code</th>
                                            <th>Request Date</th>
                                            <!-- <th>Approve Admin</th>
                                            <th>Approve Date</th>
                                            <th>Reject Admin</th>
                                            <th>Reject Date</th> -->
                                            <th>Borrow Status</th>
                                            <th>Action</th>
                                        </tr>
                                    </tfoot>
                                    <tbody>
                                      <% borrows.forEach((i,index)=> { %>
                                        <% if (i.borrow_status == "request") { %>
                                          <tr>
                                            <td><%= i.id_borrow%></td>
                                            <% user.forEach(j => { %>
                                             <% if (j.id_pegawai == i.user_id) { %>
                                              <td><a href data-bs-toggle="modal" data-bs-target="#showUser" data-bs-id="<%= j.id_pegawai %>" data-bs-nama="<%= j.nama %>" data-bs-jabatan="<%= j.jabatan %>" data-bs-noHp="<%= j.no_hp %>" data-bs-email="<%= j.email %>" data-bs-statusUsers="<%= j.status_users %>"><%= i.user_id%></a></td>
                                              
                                             <% } %>
                                            <% }) %>
                                            <td><%= i.user_name %></td>
                                            <% item.forEach(j => { %>
                                              <% if (j.id_item == i.item_id) { %>
                                               <td><a href data-bs-toggle="modal" data-bs-target="#showItem" data-bs-id="<%= j.id_item %>" data-bs-category="<%= j.category %>" data-bs-title="<%= j.title %>" data-bs-quantity="<%= j.quantity %>" ><%= i.item_id%></a></td>
                                               
                                              <% } %>
                                             <% }) %>
                                            <td><%= i.item_title %></td>
                                            <td><%= i.code%></td>
                                            <td><%= i.request_date%></td>
                                            <!-- <td><%= i.booking_admin_id%></td>
                                            <% if (i.booking_date != null) { %>
                                              <td><%= i.booking_date.getDate()%>/<%= i.booking_date.getMonth()+1%>/<%= i.booking_date.getFullYear()%></td>
                                            <% }else{ %>
                                              <td><%= null %> </td>
                                              <%} %>
                                            
                                            <td><%= i.cancel_admin_id%></td>
                                            <% if (i.cancel_date != null) { %>
                                              <td><%= i.cancel_date.getDate()%>/<%= i.cancel_date.getMonth()+1%>/<%= i.cancel_date.getFullYear()%></td>
                                            <% }else{ %>
                                              <td><%= null %> </td>
                                              <%} %> -->
  
                                            <% if (i.borrow_status == "request") { %>
                                              <td><span class="badge text-bg-info"><%= i.borrow_status%></span></td>
                                              <td>
                                                <div class="btn-group btn-group-sm" role="group" aria-label="Basic mixed styles example">
                                                  <% item.forEach(j => { %>
                                                    <% if (j.id_item == i.item_id) { %>
                                                      <% user.forEach(k => { %>
                                                        <% if (k.id_pegawai == i.user_id) { %>
                                                          <button id="liveData" type="button" class="btn btn-success" onclick='switchBooking(<%= i.id %>, "<%= users.id_pegawai %>", <%= j.available_quantity %>, "<%= j.id %>", "<%= k.email %>", "<%= k.id_pegawai %>", "<%= k.nama %>", "<%= j.id_item %>", "<%= j.title %>")'>Approve</button>
                                                          <button id="ChangeNext" type="button" class="btn btn-danger" onclick='switchRejected(<%= i.id %>, "<%= users.id_pegawai %>", "<%= k.email %>", "<%= k.id_pegawai %>", "<%= k.nama %>", "<%= j.id_item %>", "<%= j.title %>" )'>Reject</button>
                                                        <% } %>
                                                       <% }) %>
                                                    <% } %>
                                                   <% }) %>
                                                  
                                                </div>
                                              </td>
                                            <% } else if(i.borrow_status == "booking"){%>
                                              <td><span class="badge text-bg-warning"><%= i.borrow_status%></span></td>
                                              <td><%= null %> </td>
                                            <% }else if(i.borrow_status == "borrowed"){%>
                                              <td><span class="badge text-bg-primary"><%= i.borrow_status%></span></td>
                                              <td><%= null %> </td>
                                            <% }else if(i.borrow_status == "completed"){%>
                                              <td><span class="badge text-bg-success"><%= i.borrow_status%></span></td>
                                              <td><%= null %> </td>
                                            <% } else{%> 
                                              <td><span class="badge text-bg-danger"><%= i.borrow_status%></span></td>
                                              <td><%= null %> </td>
                                            <% } %> 
  
  
                                            <!-- ======================================== -->
  
                                            
                                          </tr>
                                        <% } %>
                                        
                                      <% }) %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                </div>
                <!-- /.container-fluid -->

            </div>
            <!-- End of Main Content -->

            <%- include('partials_admin/footer'); %>

        </div>
        <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <%- include('partials_admin/logout'); %>

    <!-- =====================================Modal Show User================================ -->
    <div class="modal fade" id="showUser" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="exampleModalLabel">Data User</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <form id="detailBorrow">
                <div class="mb-3">
                  <label for="recipient-id" class="col-form-label">ID Pegawai:</label>
                  <input type="text" readonly class="form-control" id="recipient-id">
                </div>
                <div class="mb-3">
                  <label for="recipient1-nama" class="col-form-label">Nama:</label>
                  <input type="text" readonly class="form-control" id="recipient1-nama">
                </div>
                <div class="mb-3">
                  <label for="recipient2-jabatan" class="col-form-label">Jabatan:</label>
                  <input type="text" readonly class="form-control" id="recipient2-jabatan">
                </div>
                <div class="mb-3">
                  <label for="recipient3-noHp" class="col-form-label">No HP:</label>
                  <input type="text" readonly class="form-control" id="recipient3-noHp">
                  <!-- <input type="text" readonly class="form-control" id="recipient2-title"> -->
                </div>
                <div class="mb-3">
                  <label for="recipient4-email" class="col-form-label">Email:</label>
                  <input type="text" readonly class="form-control" id="recipient4-email">
                </div>
                <div class="mb-3">
                  <label for="recipient5-statusUsers" class="col-form-label">Status User:</label>
                  <input type="text" readonly class="form-control" id="recipient5-statusUsers">
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
  
      <!-- =====================================Modal Show Item====================================== -->
      <div class="modal fade" id="showItem" tabindex="-1" aria-labelledby="itemLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title" id="itemLabel">Data Item</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
              <form id="detailBorrow">
                <div class="mb-3">
                  <label for="recipient-id" class="col-form-label">ID Item:</label>
                  <input type="text" readonly class="form-control" id="recipient-id">
                </div>
                <div class="mb-3">
                  <label for="recipient1-category" class="col-form-label">Category:</label>
                  <input type="text" readonly class="form-control" id="recipient1-category">
                </div>
                <div class="mb-3">
                  <label for="recipient2-title" class="col-form-label">Title:</label>
                  <input type="text" readonly class="form-control" id="recipient2-title">
                </div>
                <div class="mb-3">
                  <label for="recipient3-quantity" class="col-form-label">Quantity:</label>
                  <input type="text" readonly class="form-control" id="recipient3-quantity">
                </div>
                
              </form>
            </div>
          </div>
        </div>
      </div>

    <%- include('partials_admin/script'); %>
    <!-- script -->
    <script type="text/javascript">
        // const socket = io("http://localhost:8001/");

        $(document).ready(function () {
            $('#dataTable').DataTable();
            // loadDueDate();
        });
        
        function randomString(len, charSet) {
          charSet = charSet || 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
          var randomString = '';
          for (var i = 0; i < len; i++) {
              var randomPoz = Math.floor(Math.random() * charSet.length);
              randomString += charSet.substring(randomPoz,randomPoz+1);
          }
          return randomString;
        }

        async function switchBooking(id, idA, aq, idI, email, receiverId, name, id_item, title){
          let tgl = new Date();
          let borrow_status = "booking";
          let code = randomString(6);
          $.ajax({
              url: `http://localhost:8001/api/update_borrow/${id}`,
              type: 'PUT',
              data: ({ booking_admin_id: idA, booking_date: tgl, code: code, borrow_status: borrow_status }),
              success: function (result) {
                location.reload();
              }
          });

          let availableQuantity = aq - 1;
          let index = idI;
  
          $.ajax({
              url: `http://localhost:8001/api/update_item/${index}`,
              type: 'PUT',
              data: ({ available_quantity: availableQuantity }),
              success: function (result) {
                location.reload();
              }
          });

          $.ajax({
            url: `http://localhost:8001/api/add_alert`,
            type: 'POST',
            data: ({ receiverName: name, senderId: idA, senderName: "Admin", id_item: id_item, title: title, text: "Request Booking Approved" }),
            success: function (result) {
              
              location.reload();
            }
          });

          socket.emit("newUser", idA);
          socket.emit("approveBooking", {
              // senderId: id_pegawai, 
              receiverId: receiverId,
              name: name,
              id_item: id_item,
              title: title,
              email: email,
              text: "Request Booking Approved",
              subtext: "Your booking request has been approved by the admin APRIL Library. You have received the code which is located in your loan history. This code will be used to validate the borrowing of the item. This code will be active for 2 days. Please come to the library to pick up the item."
          });
        }
  
        async function switchBorrowed(id, idA){
          event.preventDefault();
          let tgl = new Date();
          let borrow_status = "borrowed";
          let dueDate = new Date(tgl);
          dueDate.setDate(dueDate.getDate()+14);
          $.ajax({
              url: `http://localhost:8001/api/update_borrow/${id}`,
              type: 'PUT',
              data: ({ borrow_admin_id: idA, borrow_date: tgl, due_date: dueDate, borrow_status: borrow_status }),
              success: function (result) {
                location.reload();
              }
          });
        }
  
        async function switchCompleted(id, idA, aq, idI, r, idU){
          // let ind= id;
          let tgl = new Date();
          let borrow_status = "completed";
          
          $.ajax({
              url: `http://localhost:8001/api/update_borrow/${id}`,
              type: 'PUT',
              data: ({ return_admin_id: idA, return_date: tgl, borrow_status: borrow_status }),
              success: function (result) {
                location.reload();
              }
          });
  
          let availableQuantity = aq + 1;
  
          $.ajax({
              url: `http://localhost:8001/api/update_item/${idI}`,
              type: 'PUT',
              data: ({ available_quantity: availableQuantity }),
              success: function (result) {
                // console.log(result)
                // location.reload();
              }
          });

          let ration = r+1;
          console.log(ration);
          $.ajax({
            url: `http://localhost:8001/api/update_profile/${idU}`,
            type: 'PUT',
            data: ({ ration: ration }),
            success: function (result) {
              // location.reload();
            }
          });
        }
  
        async function switchCanceled(id, idA){
          let tgl = new Date();
          let borrow_status = "canceled";
          $.ajax({
              url: `http://localhost:8001/api/update_borrow/${id}`,
              type: 'PUT',
              data: ({ cancel_admin_id: idA, cancel_date: tgl, borrow_status: borrow_status }),
              success: function (result) {
                location.reload();
              }
          });
        }

        async function switchRejected(id, idA, email, receiverId, name, id_item, title){
          let tgl = new Date();
          let borrow_status = "rejected";
          $.ajax({
              url: `http://localhost:8001/api/update_borrow/${id}`,
              type: 'PUT',
              data: ({ cancel_admin_id: idA, cancel_date: tgl, borrow_status: borrow_status }),
              success: function (result) {
                // location.reload();
              }
          });

          $.ajax({
            url: `http://localhost:8001/api/add_alert`,
            type: 'POST',
            data: ({ receiverName: name, senderId: idA, senderName: "Admin", id_item: id_item, title: title, text: "Request Booking Rejected" }),
            success: function (result) {
              
              location.reload();
            }
          });

          socket.emit("newUser", idA);
          socket.emit("approveBooking", {
              // senderId: id_pegawai, 
              receiverId: receiverId,
              name: name,
              id_item: id_item,
              title: title,
              email: email,
              text: "Request Booking Rejected",
              subtext: "Sorry your booking request was not approved."
          });
        }
  
        //=====================Modal User========================
        const exampleModal = document.getElementById('showUser')
        exampleModal.addEventListener('show.bs.modal', event => {
          // Button that triggered the modal
          const button = event.relatedTarget
          // Extract info from data-bs-* attributes
          const recipient = button.getAttribute('data-bs-id')
          const recipient1 = button.getAttribute('data-bs-nama')
          const recipient2 = button.getAttribute('data-bs-jabatan')
          const recipient3 = button.getAttribute('data-bs-noHp')
          const recipient4 = button.getAttribute('data-bs-email')
          const recipient5 = button.getAttribute('data-bs-statusUsers')
          
          // If necessary, you could initiate an AJAX request here
          // and then do the updating in a callback.
          //
          // Update the modal's content.
          const modalTitle = exampleModal.querySelector('.modal-title')
          const modalBodyInput = exampleModal.querySelector('#recipient-id')
          const modalBodyInput1 = exampleModal.querySelector('#recipient1-nama')
          const modalBodyInput2 = exampleModal.querySelector('#recipient2-jabatan')
          const modalBodyInput3 = exampleModal.querySelector('#recipient3-noHp')
          const modalBodyInput4 = exampleModal.querySelector('#recipient4-email')
          const modalBodyInput5 = exampleModal.querySelector('#recipient5-statusUsers')
  
          modalTitle.textContent = `Data Peminjaman ${recipient}`
          modalBodyInput.value = recipient
          modalBodyInput1.value = recipient1
          modalBodyInput2.value = recipient2
          modalBodyInput3.value = recipient3
          modalBodyInput4.value = recipient4
          modalBodyInput5.value = recipient5
          
        })
  
        //=====================Modal Item========================
        const itemModal = document.getElementById('showItem')
        itemModal.addEventListener('show.bs.modal', event => {
          // Button that triggered the modal
          const button = event.relatedTarget
          // Extract info from data-bs-* attributes
          const recipient = button.getAttribute('data-bs-id')
          const recipient1 = button.getAttribute('data-bs-category')
          const recipient2 = button.getAttribute('data-bs-title')
          const recipient3 = button.getAttribute('data-bs-quantity')
          
          // If necessary, you could initiate an AJAX request here
          // and then do the updating in a callback.
          //
          // Update the modal's content.
          const modalTitle = itemModal.querySelector('.modal-title')
          const modalBodyInput = itemModal.querySelector('#recipient-id')
          const modalBodyInput1 = itemModal.querySelector('#recipient1-category')
          const modalBodyInput2 = itemModal.querySelector('#recipient2-title')
          const modalBodyInput3 = itemModal.querySelector('#recipient3-quantity')
  
          modalTitle.textContent = `Data Peminjaman ${recipient}`
          modalBodyInput.value = recipient
          modalBodyInput1.value = recipient1
          modalBodyInput2.value = recipient2
          modalBodyInput3.value = recipient3
          
        })
  
        // $(function(){
      
        //     // optional: don't cache ajax to force the content to be fresh
        //     $.ajaxSetup ({
        //         cache: false
        //     });
            
  
            
        //     // specify the server/url you want to load data from
        //     var url = "http://localhost:8001/admin/borrow_admin";
            
        //     // on click, load the data dynamically into the #result div
        //     // load(url);
        //     // window.setTimeout(update, 1000);
  
        //     $("#liveData").click(function(){
        //         $("#result").load(url);
        //     });
  
        // });
  
        
  
      </script>
</body>

</html>